Q:
------- Network programing -------

A:


Q: 
What are the 4 layers of Networking? What concern does each layer address?

A:
Link: physically transmit data from one device to another with a cable or radio
Network: implement packet-switching and route of packets across multiple nodes
Transport: identify a particular application on a host, (TCP only:) provide a reliable data stream
Application: play games, retrieve web pages, send email, etc.

Q: 
Which layer provides port numbers?

A:
--> the transport layer

Q: 
What is the difference between UDP and TCP?

A:
--> UDP: no stream, users split data, some data loss (- reliable), faster that TCP
--> TCP: stream, thus no need to split, receipt of delivery (+ reliable), 3 way handshake
Both need port numbers. 

Q: 
What system functions would be used by the server in C?

A:
--> On the server side: 'bind', 'listen', 'accept', 'socket'

Q: 
List the system functions that are used by the Client in C?

A:
--> On the client side: 'connect', 'socket'

Q:
What does the listen() function do?

A:
--> It tells the OS to wait for connection to place into a queue

Q: 
What does the accept() function do?
A:
--> It pulls the connection in to Application layer to start working with it.

Q:
What does the connect() function do?

A:
--> It connects the client to the passed server 

Q:
How do you make Stdin into a file descriptor in C?
A:
--> int fd = fileno(stdin);

Q: 
How to close this file descriptor?
int fd = fileno(stdin);

A:
--> close(fd); // fclose() is used on FILE stream not file_no

Q: 
How to open a FILE* then convert this into a file descriptor?

A:
FILE *file = fopen("test.txt", "r");
int fd = fileno(file);


Q: 
How to convert a fileno into a FILE?
int fd = fileno(stdin);

A:
--> FILE *fdopen(int fd, const char *mode);
ex: FILE *fdopen(fd, "r+"); // r+ both reading and writting

Q: 
What is more abstract a FILE* or a fileno?

A:
--> FILE* is more abstract, a fileno is just an int

Q:

A:
-->


Q:
------- The End -------

A:


